App.KL.Game.Hero.Cyclope.hero: App.KL.Game.Hero
  let name = "Cyclope"

  let draw = (pose)
    {none, App.KL.Game.Hero.Cyclope.Assets.vbox_idle}

  let picture = (bool, time)
    App.KL.Game.Hero.Cyclope.Assets.base64_idle

  let max_hp = 25 :: I32

  let max_ap = 3 :: I32

  let skills = {
    "X": App.KL.Game.Skill.new("Walk", 500, 8, 2, App.KL.Game.Effect.common.walk(2, 1))
    "Q": App.KL.Game.Skill.new("Empathy",280, 48, 0, App.KL.Game.Hero.Cyclope.hero.Skills.empathy(2, 1, 8, 1))
    "W": App.KL.Game.Skill.new("Ground Slam", 800, 48, 0, App.KL.Game.Hero.Cyclope.hero.Skills.ground_slam(2, 6, 2))
    "E": App.KL.Game.Skill.new("Revenge", 480, 48, 1, App.KL.Game.Hero.Cyclope.hero.Skills.revenge(1, 1))
  }

  let on_stepped = none

  App.KL.Game.Hero.new(name, draw, picture, max_hp, max_ap, skills, on_stepped)


// SKILLS

App.KL.Game.Hero.Cyclope.hero.Skills.empathy(dmg_on_self: I32, duration: I32, shield_value: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect { 
    get board = App.KL.Game.Effect.board.get
    get center = App.KL.Game.Effect.coord.get_center
    get target = App.KL.Game.Effect.coord.get_target
    let board_size = App.KL.Constants.board_size
    let area = Hexagonal.Axial.neighbour(center)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.green, area)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue, [center])
    App.KL.Game.Effect.hp.damage_at(dmg_on_self, center)
    App.KL.Game.Effect.common.shield.ring(1, "Empathy", duration, shield_value, ap_cost)
    return unit
  }

App.KL.Game.Hero.Cyclope.hero.Skills.ground_slam(radius: I32 dmg: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect { 
    get center = App.KL.Game.Effect.coord.get_center  
    App.KL.Game.Effect.ap.use(ap_cost)
    let area = App.KL.Game.Effect.area.circle_without_center(center, radius)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red, area)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue, [center])
    App.KL.Game.Effect.area!(App.KL.Game.Effect.hp.damage_at(dmg), area)
    return unit
  }

App.KL.Game.Hero.Cyclope.hero.Skills.revenge(range: I32, ap_cost: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect {
      App.KL.Game.Effect.limit_range(range)
      get map = App.KL.Game.Effect.board.get
      get center = App.KL.Game.Effect.coord.get_center
      get target = App.KL.Game.Effect.coord.get_target
      let creature = App.KL.Game.Board.Creature.get(center, map)
      without creature: App.KL.Game.Effect.pass
        App.KL.Game.Effect { 
          let hero = creature@hero
          let missing_hp = hero@max_hp - creature@hp
          let dmg = missing_hp / 2
          App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red, [target])
          App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue, [center])
          App.KL.Game.Effect.common.dmg.single(range, dmg, ap_cost)
          return unit
        }
  }
