App.KL.Game.Effect.status.shield.change_at(
  id: String
  duration: I32
  amount: I32
): App.KL.Game.Effect.At<I32>
  (pos)

  App.KL.Game.Effect {
    get board = App.KL.Game.Effect.board.get
    let creature = App.KL.Game.Board.Creature.get(pos, board)
    case creature { 
      none:
        App.KL.Game.Effect { return +0#32 }
      some:
        let shielded = App.KL.Game.Creature.Status.shield.add(creature.value, id, I32.add(I32.mul(duration, 16), 1), amount)
        let new_board = App.KL.Game.Board.Creature.set(pos, shielded, board)
        let total_shield = App.KL.Game.Creature.Status.shield.total(shielded)
        App.KL.Game.Effect { 
          App.KL.Game.Effect.board.set(new_board)
          App.KL.Game.Effect { return total_shield } 
        }
    }
  }
